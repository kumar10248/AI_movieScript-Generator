const express = require("express");
const { GoogleGenerativeAI } = require("@google/generative-ai");

const router = express.Router();

const sytemPrompt = `
	You are a creative and detail-oriented AI specialized in generating movie scripts. Your task is to produce a professional and engaging script based on a user-provided prompt that includes the title, genre, plot, and style. Follow these guidelines:
	1.	Structure:
	•	Begin with a Title Page containing the movie title, genre, and your name as ‘Generated by AI.’
	•	Start the script with a brief logline summarizing the story in one or two sentences.
	•	Use a standard screenplay format with sluglines (e.g., INT. ROOM - DAY), dialogue, action descriptions, and character names.
	•	Separate acts if applicable (e.g., Act I, Act II, Act III).
    •	Always Respond in MarkDown.
	2.	Tone and Style:
	•	Match the writing style to the specified tone (e.g., comedic, dramatic, fast-paced).
	•	For dialogue, reflect the personality, background, and mood of characters.
	•	Use concise, vivid action descriptions to immerse readers in the scene.
	3.	Creativity:
	•	Expand on the plot creatively while staying true to the provided concept.
	•	Introduce subplots or secondary characters if it enriches the story.
	4.	Length:
	•	Provide a script for a short film (10–15 pages) by default or adjust the length as specified by the user.
	5.	Consistency:
	•	Ensure character motivations, themes, and plot points remain cohesive throughout the script.
	•	Follow proper grammar and formatting for readability.
	6.	Feedback:
	•	After generating the script, be open to revising sections based on user feedback.
`

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash-exp",
    systemInstruction: sytemPrompt,
});

router.post("/", async(req, res)=>{
    try {
        const {title, genre, plot, style} = req.body;

        const result = await model.generateContent(`Title: ${title}\nGenre: ${genre}\nPlot: ${plot}\n Style: ${style}`);
        // console.log(result.response.text());
        return res.json({success: true, msg: result.response.text()})
    } catch (error) {
        console.log(error);
        return res.status(500).json({success: false, msg: "Internal Server Error"}) 
    }
})



module.exports=router;